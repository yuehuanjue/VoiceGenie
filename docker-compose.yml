version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    container_name: voicegenie_postgres
    environment:
      POSTGRES_DB: voicegenie
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - voicegenie-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:6-alpine
    container_name: voicegenie_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - voicegenie-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: voicegenie_backend
    environment:
      - APP_ENV=development
      - APP_PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=voicegenie
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres123}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/bin  # Exclude binary from volume
    networks:
      - voicegenie-network
    restart: unless-stopped
    command: ["./wait-for-it.sh", "postgres:5432", "--", "./bin/voicegenie"]

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: voicegenie_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - voicegenie-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  voicegenie-network:
    driver: bridge